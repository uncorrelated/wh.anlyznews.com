<!DOCTYPE html>

<html>

<head>

<meta charset="utf-8" />
<meta name="generator" content="pandoc" />
<meta http-equiv="X-UA-Compatible" content="IE=EDGE" />




<title>Rのモデル式からの情報取得</title>

<script src="common_files/header-attrs-2.25/header-attrs.js"></script>
<script src="common_files/jquery-3.6.0/jquery-3.6.0.min.js"></script>
<meta name="viewport" content="width=device-width, initial-scale=1" />
<link href="common_files/bootstrap-3.3.5/css/bootstrap.min.css" rel="stylesheet" />
<script src="common_files/bootstrap-3.3.5/js/bootstrap.min.js"></script>
<script src="common_files/bootstrap-3.3.5/shim/html5shiv.min.js"></script>
<script src="common_files/bootstrap-3.3.5/shim/respond.min.js"></script>
<style>h1 {font-size: 34px;}
       h1.title {font-size: 38px;}
       h2 {font-size: 30px;}
       h3 {font-size: 24px;}
       h4 {font-size: 18px;}
       h5 {font-size: 16px;}
       h6 {font-size: 12px;}
       code {color: inherit; background-color: rgba(0, 0, 0, 0.04);}
       pre:not([class]) { background-color: white }</style>
<script src="common_files/navigation-1.1/tabsets.js"></script>
<meta name="ROBOTS" content="INDEX,FOLLOW"/>
<link href='http://www.hatena.ne.jp/uncorrelated/' rel='author'/>
<link rel="SHORTCUT ICON" href="/img/miniicon.ico"/>
<script type="text/javascript">

  var _gaq = _gaq || [];
  _gaq.push(['_setAccount', 'UA-10387742-4']);
  _gaq.push(['_trackPageview']);

  (function() {
    var ga = document.createElement('script'); ga.type = 'text/javascript'; ga.async = true;
    ga.src = ('https:' == document.location.protocol ? 'https://ssl' : 'http://www') + '.google-analytics.com/ga.js';
    var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(ga, s);
  })();
</script>
<script src="/parts/include_parts.js"></script>

<style type="text/css">
  code{white-space: pre-wrap;}
  span.smallcaps{font-variant: small-caps;}
  span.underline{text-decoration: underline;}
  div.column{display: inline-block; vertical-align: top; width: 50%;}
  div.hanging-indent{margin-left: 1.5em; text-indent: -1.5em;}
  ul.task-list{list-style: none;}
    </style>



<style type="text/css">
  code {
    white-space: pre;
  }
  .sourceCode {
    overflow: visible;
  }
</style>
<style type="text/css" data-origin="pandoc">
pre > code.sourceCode { white-space: pre; position: relative; }
pre > code.sourceCode > span { line-height: 1.25; }
pre > code.sourceCode > span:empty { height: 1.2em; }
.sourceCode { overflow: visible; }
code.sourceCode > span { color: inherit; text-decoration: inherit; }
div.sourceCode { margin: 1em 0; }
pre.sourceCode { margin: 0; }
@media screen {
div.sourceCode { overflow: auto; }
}
@media print {
pre > code.sourceCode { white-space: pre-wrap; }
pre > code.sourceCode > span { text-indent: -5em; padding-left: 5em; }
}
pre.numberSource code
  { counter-reset: source-line 0; }
pre.numberSource code > span
  { position: relative; left: -4em; counter-increment: source-line; }
pre.numberSource code > span > a:first-child::before
  { content: counter(source-line);
    position: relative; left: -1em; text-align: right; vertical-align: baseline;
    border: none; display: inline-block;
    -webkit-touch-callout: none; -webkit-user-select: none;
    -khtml-user-select: none; -moz-user-select: none;
    -ms-user-select: none; user-select: none;
    padding: 0 4px; width: 4em;
    color: #aaaaaa;
  }
pre.numberSource { margin-left: 3em; border-left: 1px solid #aaaaaa;  padding-left: 4px; }
div.sourceCode
  {   }
@media screen {
pre > code.sourceCode > span > a:first-child::before { text-decoration: underline; }
}
code span.al { color: #ff0000; font-weight: bold; } /* Alert */
code span.an { color: #60a0b0; font-weight: bold; font-style: italic; } /* Annotation */
code span.at { color: #7d9029; } /* Attribute */
code span.bn { color: #40a070; } /* BaseN */
code span.bu { color: #008000; } /* BuiltIn */
code span.cf { color: #007020; font-weight: bold; } /* ControlFlow */
code span.ch { color: #4070a0; } /* Char */
code span.cn { color: #880000; } /* Constant */
code span.co { color: #60a0b0; font-style: italic; } /* Comment */
code span.cv { color: #60a0b0; font-weight: bold; font-style: italic; } /* CommentVar */
code span.do { color: #ba2121; font-style: italic; } /* Documentation */
code span.dt { color: #902000; } /* DataType */
code span.dv { color: #40a070; } /* DecVal */
code span.er { color: #ff0000; font-weight: bold; } /* Error */
code span.ex { } /* Extension */
code span.fl { color: #40a070; } /* Float */
code span.fu { color: #06287e; } /* Function */
code span.im { color: #008000; font-weight: bold; } /* Import */
code span.in { color: #60a0b0; font-weight: bold; font-style: italic; } /* Information */
code span.kw { color: #007020; font-weight: bold; } /* Keyword */
code span.op { color: #666666; } /* Operator */
code span.ot { color: #007020; } /* Other */
code span.pp { color: #bc7a00; } /* Preprocessor */
code span.sc { color: #4070a0; } /* SpecialChar */
code span.ss { color: #bb6688; } /* SpecialString */
code span.st { color: #4070a0; } /* String */
code span.va { color: #19177c; } /* Variable */
code span.vs { color: #4070a0; } /* VerbatimString */
code span.wa { color: #60a0b0; font-weight: bold; font-style: italic; } /* Warning */

</style>
<script>
// apply pandoc div.sourceCode style to pre.sourceCode instead
(function() {
  var sheets = document.styleSheets;
  for (var i = 0; i < sheets.length; i++) {
    if (sheets[i].ownerNode.dataset["origin"] !== "pandoc") continue;
    try { var rules = sheets[i].cssRules; } catch (e) { continue; }
    var j = 0;
    while (j < rules.length) {
      var rule = rules[j];
      // check if there is a div.sourceCode rule
      if (rule.type !== rule.STYLE_RULE || rule.selectorText !== "div.sourceCode") {
        j++;
        continue;
      }
      var style = rule.style.cssText;
      // check if color or background-color is set
      if (rule.style.color === '' && rule.style.backgroundColor === '') {
        j++;
        continue;
      }
      // replace div.sourceCode by a pre.sourceCode rule
      sheets[i].deleteRule(j);
      sheets[i].insertRule('pre.sourceCode{' + style + '}', j);
    }
  }
})();
</script>

<style type="text/css">
  p.abstract{
    text-align: center;
    font-weight: bold;
  }
  div.abstract{
    margin: auto;
    width: 90%;
  }
</style>



<link rel="stylesheet" href="../R/styles.css" type="text/css" />



<style type = "text/css">
.main-container {
  max-width: 940px;
  margin-left: auto;
  margin-right: auto;
}
img {
  max-width:100%;
}
.tabbed-pane {
  padding-top: 12px;
}
.html-widget {
  margin-bottom: 20px;
}
button.code-folding-btn:focus {
  outline: none;
}
summary {
  display: list-item;
}
details > summary > p:only-child {
  display: inline;
}
pre code {
  padding: 0;
}
</style>



<!-- tabsets -->

<style type="text/css">
.tabset-dropdown > .nav-tabs {
  display: inline-table;
  max-height: 500px;
  min-height: 44px;
  overflow-y: auto;
  border: 1px solid #ddd;
  border-radius: 4px;
}

.tabset-dropdown > .nav-tabs > li.active:before, .tabset-dropdown > .nav-tabs.nav-tabs-open:before {
  content: "\e259";
  font-family: 'Glyphicons Halflings';
  display: inline-block;
  padding: 10px;
  border-right: 1px solid #ddd;
}

.tabset-dropdown > .nav-tabs.nav-tabs-open > li.active:before {
  content: "\e258";
  font-family: 'Glyphicons Halflings';
  border: none;
}

.tabset-dropdown > .nav-tabs > li.active {
  display: block;
}

.tabset-dropdown > .nav-tabs > li > a,
.tabset-dropdown > .nav-tabs > li > a:focus,
.tabset-dropdown > .nav-tabs > li > a:hover {
  border: none;
  display: inline-block;
  border-radius: 4px;
  background-color: transparent;
}

.tabset-dropdown > .nav-tabs.nav-tabs-open > li {
  display: block;
  float: none;
}

.tabset-dropdown > .nav-tabs > li {
  display: none;
}
</style>

<!-- code folding -->




</head>

<body>


<div class="container-fluid main-container">



<div class="header">
<!--#include virtual="/parts/header.txt"-->

</div>
<div class="advertisement">

<!--#include virtual="/parts/ad.txt"-->
<div class="adsense">
<script type="text/javascript"><!--
google_ad_client = "pub-1521343453876863";
/* 120x600, 作成済み 08/03/26 */
google_ad_slot = "6814144664";
google_ad_width = 120;
google_ad_height = 600;
//-->
</script>
<script type="text/javascript"
src="https://pagead2.googlesyndication.com/pagead/show_ads.js">
</script>
</div>

</div>

<div class="right">

<div id="rhs"><!--#include virtual="menu.txt"--></div>
<script>include_parts('rhs', 'https://wh.anlyznews.com/R/menu.txt');</script>

<div>
<!-- SiteSearch Google -->
<form method="get" action="https://www.google.co.jp/search">
<div style="text-align:center;">
<a href="https://www.google.co.jp/"><img src="https://www.google.com/logos/Logo_40wht.gif" border="0" alt="Google" align="absmiddle"/></a>

<input type="text" name="q" size="20" maxlength="255" value=""/>
<input type="hidden" name="hl" value="ja"/>
<input type="hidden" name="ie" value="UTF-8"/>
<input type="hidden" name="domains" value="wh.anlyznews.com"/>
<input type="submit" name="btnG" value="Google 検索"/><br/>
<div style="text-align:left;margin:8pt;0pt;0pt;0pt;font-size:10pt;line-height:11pt;">
<input type="radio" name="sitesearch" value=""/><span style="position:relative; top:-2pt;">WWWを検索</span><br/>
<input type="radio" name="sitesearch" value="wh.anlyznews.com" checked="true"/><span style="position:relative; top:-2pt;">サイト内を検索</span>
</div>
</div>
</form>
<!-- SiteSearch Google -->
</div>

</div>

<div class="article" id="article">

<div id="header">



<h1 class="title toc-ignore">Rのモデル式からの情報取得</h1>
<!--#include virtual="/parts/under_h2.txt"-->

<div>
<a href="https://b.hatena.ne.jp/entry/" class="hatena-bookmark-button" data-hatena-bookmark-layout="simple" title="このエントリーをはてなブックマークに追加"><img src="https://b.st-hatena.com/images/entry-button/button-only.gif" alt="このエントリーをはてなブックマークに追加" width="20" height="20" style="border: none;" /></a><script type="text/javascript" src="https://b.st-hatena.com/js/bookmark_button.js" charset="utf-8" async="async"></script>
<a class='mixi-check-button' data-button='button-1' data-key='956e750b5294c8e605d83627364938b17e5bbc2b' href='https://mixi.jp/share.pl'>Check</a><script src='https://static.mixi.jp/js/share.js' type='text/javascript'></script>
<script type="text/javascript" src="https://static.evernote.com/noteit.js"></script>
<a href="#" onclick="Evernote.doClip({contentId:'article'}); return false;"><img src="https://static.evernote.com/article-clipper.png" alt="Clip to Evernote" style="border:none;" border="0"/></a>
<a href="https://twitter.com/share?ref_src=twsrc%5Etfw" class="twitter-share-button" data-show-count="false">Tweet</a><script async src="https://platform.twitter.com/widgets.js" charset="utf-8"></script>
<div class="line-it-button" data-lang="ja" data-type="share-c" data-env="REAL" data-url="https://wh.anlyznews.com/" data-color="default" data-size="small" data-count="false" data-ver="3" style="display: none;"></div>
<script src="https://www.line-website.com/social-plugins/js/thirdparty/loader.min.js" async="async" defer="defer"></script>
<div style="text-align:center;"><script type="text/javascript"><!--
google_ad_client = "ca-pub-1521343453876863";
/* H2下側 */
google_ad_slot = "1509061605";
google_ad_width = 468;
google_ad_height = 60;
//-->
</script>
<script type="text/javascript"
src="https://pagead2.googlesyndication.com/pagead/show_ads.js">
</script></div>
</div>

<p>Rを使い始めると初日からお世話になるy ~ x +
zのようなモデル式ですが、意外に扱い方に習熟しづらいものです。関数にモデル式を入れるのは簡単ですが、モデル式を操作するのに慣れていない人は多いでしょう。しかし、パッケージの作成などでは必要になる知識です。慣れてしまえば簡単なので、存在を覚えておきましょう。</p>

</div>

<div id="TOC">
<ul>
<li><a href="#モデル式の作り方" id="toc-モデル式の作り方"><span
class="toc-section-number">1</span> モデル式の作り方</a></li>
<li><a href="#モデル式からの情報取得"
id="toc-モデル式からの情報取得"><span
class="toc-section-number">2</span> モデル式からの情報取得</a>
<ul>
<li><a href="#データセット" id="toc-データセット"><span
class="toc-section-number">2.1</span> データセット</a></li>
<li><a href="#変数名の取得" id="toc-変数名の取得"><span
class="toc-section-number">2.2</span> 変数名の取得</a></li>
<li><a href="#モデル式に必要となる変数をまとめる"
id="toc-モデル式に必要となる変数をまとめる"><span
class="toc-section-number">2.3</span>
モデル式に必要となる変数をまとめる</a></li>
<li><a href="#欠損値を含める" id="toc-欠損値を含める"><span
class="toc-section-number">2.4</span> 欠損値を含める</a></li>
<li><a href="#モデル式から行列を作成する"
id="toc-モデル式から行列を作成する"><span
class="toc-section-number">2.5</span>
モデル式から行列を作成する</a></li>
</ul></li>
</ul>
</div>

<div id="モデル式の作り方" class="section level1" number="1">
<h1><span class="header-section-number">1</span> モデル式の作り方</h1>
<p><code>lm</code>などのコマンドに渡すモデル式を作る方法は<a
href="http://wh.anlyznews.com/R/OLS.shtml#lm%E3%81%A7%E6%8E%A8%E5%AE%9A%E3%82%92%E8%A1%8C%E3%81%AA%E3%81%86">OLSの説明</a>でざっと説明しました。<code>?formula</code>にも同様のことが書いてあります。</p>
</div>
<div id="モデル式からの情報取得" class="section level1" number="2">
<h1><span class="header-section-number">2</span>
モデル式からの情報取得</h1>
<p>つくったモデル式は、<code>lm</code>などのコマンド内で情報取得に使われるわけですが、何をどうやって取得するのか説明されることは少ないです。パッケージ作成などで汎用性の高い関数をつくるときには有用なので、ざっと確認していきましょう。</p>
<div id="データセット" class="section level2" number="2.1">
<h2><span class="header-section-number">2.1</span> データセット</h2>
<p>例に使うデータフレーム<code>df01</code>は以下で、100行あります。</p>
<table>
<thead>
<tr class="header">
<th align="left">g</th>
<th align="right">x1</th>
<th align="right">x2</th>
<th align="left">d</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td align="left">0</td>
<td align="right">0.4423369</td>
<td align="right">1.2189649</td>
<td align="left">c</td>
</tr>
<tr class="even">
<td align="left">2</td>
<td align="right">0.0831099</td>
<td align="right">0.0734796</td>
<td align="left">a</td>
</tr>
<tr class="odd">
<td align="left">0</td>
<td align="right">0.6146112</td>
<td align="right">1.0154364</td>
<td align="left">b</td>
</tr>
<tr class="even">
<td align="left">2</td>
<td align="right">0.6228064</td>
<td align="right">0.6251571</td>
<td align="left">c</td>
</tr>
<tr class="odd">
<td align="left">0</td>
<td align="right">0.5373650</td>
<td align="right">0.8203078</td>
<td align="left">b</td>
</tr>
</tbody>
</table>
</div>
<div id="変数名の取得" class="section level2" number="2.2">
<h2><span class="header-section-number">2.2</span> 変数名の取得</h2>
<p>モデル式<code>g ~ x1 + x2 + d</code>から、被説明変数（従属変数）と説明変数（独立変数）を抜き出してみましょう。</p>
<div class="sourceCode" id="cb1"><pre class="sourceCode r"><code class="sourceCode r"><span id="cb1-1"><a href="#cb1-1" tabindex="-1"></a>getvars <span class="ot">&lt;-</span> <span class="cf">function</span>(frml){</span>
<span id="cb1-2"><a href="#cb1-2" tabindex="-1"></a>    <span class="co"># 全ての変数名を取得</span></span>
<span id="cb1-3"><a href="#cb1-3" tabindex="-1"></a>    avars <span class="ot">&lt;-</span> <span class="fu">all.vars</span>(frml)</span>
<span id="cb1-4"><a href="#cb1-4" tabindex="-1"></a>    <span class="co"># モデル式をリスト化</span></span>
<span id="cb1-5"><a href="#cb1-5" tabindex="-1"></a>    lst <span class="ot">&lt;-</span> <span class="fu">as.list</span>(frml)</span>
<span id="cb1-6"><a href="#cb1-6" tabindex="-1"></a>    <span class="co"># リストは~と左辺と右辺に分解されるので、右辺の全変数が説明変数となる</span></span>
<span id="cb1-7"><a href="#cb1-7" tabindex="-1"></a>    evars <span class="ot">&lt;-</span> <span class="fu">all.vars</span>(lst[[<span class="fu">length</span>(lst)]])</span>
<span id="cb1-8"><a href="#cb1-8" tabindex="-1"></a>    <span class="co"># 被説明変数を選択</span></span>
<span id="cb1-9"><a href="#cb1-9" tabindex="-1"></a>    dvars <span class="ot">&lt;-</span> avars[<span class="sc">!</span>avars <span class="sc">%in%</span> evars]</span>
<span id="cb1-10"><a href="#cb1-10" tabindex="-1"></a>    <span class="co"># リストに整理して戻す</span></span>
<span id="cb1-11"><a href="#cb1-11" tabindex="-1"></a>    <span class="fu">list</span>(<span class="at">all =</span> avars, <span class="at">dependent =</span> dvars, <span class="at">explanatory =</span> evars)</span>
<span id="cb1-12"><a href="#cb1-12" tabindex="-1"></a>}</span>
<span id="cb1-13"><a href="#cb1-13" tabindex="-1"></a><span class="fu">getvars</span>(g <span class="sc">~</span> x1 <span class="sc">+</span> x2 <span class="sc">+</span> d)</span></code></pre></div>
<pre><code>$all
[1] &quot;g&quot;  &quot;x1&quot; &quot;x2&quot; &quot;d&quot; 

$dependent
[1] &quot;g&quot;

$explanatory
[1] &quot;x1&quot; &quot;x2&quot; &quot;d&quot; </code></pre>
<p>かなり複雑なモデル式でも、変数名だけを抜き出せます。</p>
<div class="sourceCode" id="cb3"><pre class="sourceCode r"><code class="sourceCode r"><span id="cb3-1"><a href="#cb3-1" tabindex="-1"></a><span class="fu">getvars</span>(y1 <span class="sc">+</span> y2 <span class="sc">~</span> <span class="fu">I</span>(x1<span class="sc">^</span><span class="dv">2</span>) <span class="sc">+</span> x1<span class="sc">*</span>x2 <span class="sc">+</span> <span class="fu">I</span>(x2<span class="sc">^</span><span class="dv">2</span>))</span></code></pre></div>
<pre><code>$all
[1] &quot;y1&quot; &quot;y2&quot; &quot;x1&quot; &quot;x2&quot;

$dependent
[1] &quot;y1&quot; &quot;y2&quot;

$explanatory
[1] &quot;x1&quot; &quot;x2&quot;</code></pre>
</div>
<div id="モデル式に必要となる変数をまとめる" class="section level2"
number="2.3">
<h2><span class="header-section-number">2.3</span>
モデル式に必要となる変数をまとめる</h2>
<p><code>model.frame</code>を使うとモデル式で推定するのに必要な変数をデータフレームにまとめることができます。
なお、属性はダミー変数に展開されません。<code>I(...)</code>は実際の値に展開されますが、クロス項は省略されています。</p>
<div class="sourceCode" id="cb5"><pre class="sourceCode r"><code class="sourceCode r"><span id="cb5-1"><a href="#cb5-1" tabindex="-1"></a>mf <span class="ot">&lt;-</span> <span class="fu">model.frame</span>(g <span class="sc">~</span> <span class="fu">I</span>(x1<span class="sc">^</span><span class="dv">2</span>) <span class="sc">+</span> x1<span class="sc">*</span>x2 <span class="sc">+</span> d, <span class="at">data =</span> df01)</span></code></pre></div>
<table>
<thead>
<tr class="header">
<th align="left">g</th>
<th align="right">I(x1^2)</th>
<th align="right">x1</th>
<th align="right">x2</th>
<th align="left">d</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td align="left">0</td>
<td align="right">0.195661….</td>
<td align="right">0.4423369</td>
<td align="right">1.2189649</td>
<td align="left">c</td>
</tr>
<tr class="even">
<td align="left">2</td>
<td align="right">0.006907….</td>
<td align="right">0.0831099</td>
<td align="right">0.0734796</td>
<td align="left">a</td>
</tr>
<tr class="odd">
<td align="left">0</td>
<td align="right">0.377746….</td>
<td align="right">0.6146112</td>
<td align="right">1.0154364</td>
<td align="left">b</td>
</tr>
<tr class="even">
<td align="left">2</td>
<td align="right">0.387887….</td>
<td align="right">0.6228064</td>
<td align="right">0.6251571</td>
<td align="left">c</td>
</tr>
<tr class="odd">
<td align="left">0</td>
<td align="right">0.288761….</td>
<td align="right">0.5373650</td>
<td align="right">0.8203078</td>
<td align="left">b</td>
</tr>
</tbody>
</table>
<p>属性情報が付与されているので<code>terms</code>で参照することができます。<code>lm</code>や<code>glm</code>の結果オブジェクトに<code>model.frame</code>でつくったデータフレームが入っていますが、予測値を作るときなどに使えます。</p>
<div class="sourceCode" id="cb6"><pre class="sourceCode r"><code class="sourceCode r"><span id="cb6-1"><a href="#cb6-1" tabindex="-1"></a><span class="fu">terms</span>(mf)</span></code></pre></div>
<pre><code>g ~ I(x1^2) + x1 * x2 + d
attr(,&quot;variables&quot;)
list(g, I(x1^2), x1, x2, d)
attr(,&quot;factors&quot;)
        I(x1^2) x1 x2 d x1:x2
g             0  0  0 0     0
I(x1^2)       1  0  0 0     0
x1            0  1  0 0     1
x2            0  0  1 0     1
d             0  0  0 1     0
attr(,&quot;term.labels&quot;)
[1] &quot;I(x1^2)&quot; &quot;x1&quot;      &quot;x2&quot;      &quot;d&quot;       &quot;x1:x2&quot;  
attr(,&quot;order&quot;)
[1] 1 1 1 1 2
attr(,&quot;intercept&quot;)
[1] 1
attr(,&quot;response&quot;)
[1] 1
attr(,&quot;.Environment&quot;)
&lt;environment: 0x5fa6b47f2878&gt;
attr(,&quot;predvars&quot;)
list(g, I(x1^2), x1, x2, d)
attr(,&quot;dataClasses&quot;)
          g     I(x1^2)          x1          x2           d 
  &quot;ordered&quot;   &quot;numeric&quot;   &quot;numeric&quot;   &quot;numeric&quot; &quot;character&quot; </code></pre>
<p>ダミーが含まれるモデルで、新たに<code>newdata</code>を与えて予測値をつくるときなどで、<code>character</code>型を元のデータフレームの列には無い要素も<code>levels</code>に含む<code>factor</code>型にしたい場合は、<code>xlev</code>オプションが使えます。</p>
<div class="sourceCode" id="cb8"><pre class="sourceCode r"><code class="sourceCode r"><span id="cb8-1"><a href="#cb8-1" tabindex="-1"></a>mf <span class="ot">&lt;-</span> <span class="fu">model.frame</span>(g <span class="sc">~</span> x1 <span class="sc">+</span> x2 <span class="sc">+</span> d, <span class="at">data =</span> df01, <span class="at">xlev =</span> <span class="fu">list</span>(<span class="at">d =</span> <span class="fu">c</span>(<span class="st">&quot;a&quot;</span>, <span class="st">&quot;b&quot;</span>, <span class="st">&quot;c&quot;</span>, <span class="st">&quot;Z&quot;</span>)))</span></code></pre></div>
</div>
<div id="欠損値を含める" class="section level2" number="2.4">
<h2><span class="header-section-number">2.4</span> 欠損値を含める</h2>
<p>標準では<code>options(na.action = "na.omit")</code>になっていて、<code>model.frame</code>は<code>NA</code>を含む行を除外します。欠損値処理がlist-wise/pair-wiseになってしまうわけですが、補定する場合は都合が悪いでしょう。<code>model.frame</code>の引数に<code>na.action = na.pass</code>をつけるか、<code>options(na.action = "na.pass")</code>とグローバルオプションを変更すれば、<code>NA</code>を含む行も含むデータフレームが作成されます。</p>
</div>
<div id="モデル式から行列を作成する" class="section level2"
number="2.5">
<h2><span class="header-section-number">2.5</span>
モデル式から行列を作成する</h2>
<p>同様に行列にすることもできます。<code>factor</code>型や<code>character</code>型の列はダミー変数に展開され、クロス項も計算されます。一方、属性情報は付与されないので<code>terms</code>は使えません。</p>
<div class="sourceCode" id="cb9"><pre class="sourceCode r"><code class="sourceCode r"><span id="cb9-1"><a href="#cb9-1" tabindex="-1"></a>mm <span class="ot">&lt;-</span> <span class="fu">model.matrix</span>(g <span class="sc">~</span> <span class="fu">I</span>(x1<span class="sc">^</span><span class="dv">2</span>) <span class="sc">+</span> x1<span class="sc">*</span>x2 <span class="sc">+</span> d, <span class="at">data =</span> df01)</span></code></pre></div>
<table>
<thead>
<tr class="header">
<th align="right">(Intercept)</th>
<th align="right">I(x1^2)</th>
<th align="right">x1</th>
<th align="right">x2</th>
<th align="right">db</th>
<th align="right">dc</th>
<th align="right">x1:x2</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td align="right">1</td>
<td align="right">0.1956619</td>
<td align="right">0.4423369</td>
<td align="right">1.2189649</td>
<td align="right">0</td>
<td align="right">1</td>
<td align="right">0.5391932</td>
</tr>
<tr class="even">
<td align="right">1</td>
<td align="right">0.0069072</td>
<td align="right">0.0831099</td>
<td align="right">0.0734796</td>
<td align="right">0</td>
<td align="right">0</td>
<td align="right">0.0061069</td>
</tr>
<tr class="odd">
<td align="right">1</td>
<td align="right">0.3777470</td>
<td align="right">0.6146112</td>
<td align="right">1.0154364</td>
<td align="right">1</td>
<td align="right">0</td>
<td align="right">0.6240986</td>
</tr>
<tr class="even">
<td align="right">1</td>
<td align="right">0.3878878</td>
<td align="right">0.6228064</td>
<td align="right">0.6251571</td>
<td align="right">0</td>
<td align="right">1</td>
<td align="right">0.3893518</td>
</tr>
<tr class="odd">
<td align="right">1</td>
<td align="right">0.2887611</td>
<td align="right">0.5373650</td>
<td align="right">0.8203078</td>
<td align="right">1</td>
<td align="right">0</td>
<td align="right">0.4408047</td>
</tr>
</tbody>
</table>
<p>この命名規則が仕様かは明確な記述を見つけられていませんが、<code>factor</code>型や<code>character</code>型の列をダミー変数に展開するとき、列名が属性名（ここでは<code>d</code>）とその値になりうるカテゴリー名の合成になります。カテゴリー名は<code>character</code>型ではデータとして入っている値からつくられますが、<code>factor</code>型の場合は<code>levels</code>の値が参照されます。なお、切片項がある場合は、最初の変数は省略されます。</p>
<div class="sourceCode" id="cb10"><pre class="sourceCode r"><code class="sourceCode r"><span id="cb10-1"><a href="#cb10-1" tabindex="-1"></a>X <span class="ot">&lt;-</span> <span class="fu">model.matrix</span>(<span class="fu">terms</span>(mf), df01)</span></code></pre></div>
<table>
<thead>
<tr class="header">
<th align="right">(Intercept)</th>
<th align="right">x1</th>
<th align="right">x2</th>
<th align="right">db</th>
<th align="right">dc</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td align="right">1</td>
<td align="right">0.4423369</td>
<td align="right">1.2189649</td>
<td align="right">0</td>
<td align="right">1</td>
</tr>
<tr class="even">
<td align="right">1</td>
<td align="right">0.0831099</td>
<td align="right">0.0734796</td>
<td align="right">0</td>
<td align="right">0</td>
</tr>
<tr class="odd">
<td align="right">1</td>
<td align="right">0.6146112</td>
<td align="right">1.0154364</td>
<td align="right">1</td>
<td align="right">0</td>
</tr>
<tr class="even">
<td align="right">1</td>
<td align="right">0.6228064</td>
<td align="right">0.6251571</td>
<td align="right">0</td>
<td align="right">1</td>
</tr>
<tr class="odd">
<td align="right">1</td>
<td align="right">0.5373650</td>
<td align="right">0.8203078</td>
<td align="right">1</td>
<td align="right">0</td>
</tr>
</tbody>
</table>
<p>先ほど<code>model.frame</code>で<code>xlev</code>を設定してつくったデータフレームではダミーの列が増えています。</p>
<div class="sourceCode" id="cb11"><pre class="sourceCode r"><code class="sourceCode r"><span id="cb11-1"><a href="#cb11-1" tabindex="-1"></a>X <span class="ot">&lt;-</span> <span class="fu">model.matrix</span>(<span class="fu">terms</span>(mf), mf)</span></code></pre></div>
<table>
<thead>
<tr class="header">
<th align="right">(Intercept)</th>
<th align="right">x1</th>
<th align="right">x2</th>
<th align="right">db</th>
<th align="right">dc</th>
<th align="right">dZ</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td align="right">1</td>
<td align="right">0.4423369</td>
<td align="right">1.2189649</td>
<td align="right">0</td>
<td align="right">1</td>
<td align="right">0</td>
</tr>
<tr class="even">
<td align="right">1</td>
<td align="right">0.0831099</td>
<td align="right">0.0734796</td>
<td align="right">0</td>
<td align="right">0</td>
<td align="right">0</td>
</tr>
<tr class="odd">
<td align="right">1</td>
<td align="right">0.6146112</td>
<td align="right">1.0154364</td>
<td align="right">1</td>
<td align="right">0</td>
<td align="right">0</td>
</tr>
<tr class="even">
<td align="right">1</td>
<td align="right">0.6228064</td>
<td align="right">0.6251571</td>
<td align="right">0</td>
<td align="right">1</td>
<td align="right">0</td>
</tr>
<tr class="odd">
<td align="right">1</td>
<td align="right">0.5373650</td>
<td align="right">0.8203078</td>
<td align="right">1</td>
<td align="right">0</td>
<td align="right">0</td>
</tr>
</tbody>
</table>
</div>
</div>

</div>
<div class="footer" id="footer"><!--#include virtual="/parts/footer.txt"--></div>
<script>include_parts('footer', 'https://wh.anlyznews.com/parts/footer.txt');</script>



</div>

<script>

// add bootstrap table styles to pandoc tables
function bootstrapStylePandocTables() {
  $('tr.odd').parent('tbody').parent('table').addClass('table table-condensed');
}
$(document).ready(function () {
  bootstrapStylePandocTables();
});


</script>

<!-- tabsets -->

<script>
$(document).ready(function () {
  window.buildTabsets("TOC");
});

$(document).ready(function () {
  $('.tabset-dropdown > .nav-tabs > li').click(function () {
    $(this).parent().toggleClass('nav-tabs-open');
  });
});
</script>

<!-- code folding -->


<script id="MathJax-script" async
  src="https://cdn.jsdelivr.net/npm/mathjax@3/es5/tex-svg.js">
</script>

</body>
</html>
